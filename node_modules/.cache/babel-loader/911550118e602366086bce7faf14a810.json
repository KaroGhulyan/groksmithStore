{"ast":null,"code":"import axios from 'axios';\nimport { ProductActionType } from './types';\nimport { getProductsUrl } from '../config/config.json';\n\nconst fetchProducts = async () => {\n  const response = await axios.get(getProductsUrl);\n  return response;\n};\n\nconst getProducts = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ProductActionType.getProducts,\n        payload: []\n      });\n      const response = await axios.get(getProductsUrl);\n      dispatch({\n        type: ProductActionType.getProductsSuccess,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: ProductActionType.getProductsError,\n        payload: 'Error'\n      });\n    }\n  };\n};\n\nexport { getProducts };","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/actions/products.ts"],"names":["axios","ProductActionType","getProductsUrl","fetchProducts","response","get","getProducts","dispatch","type","payload","getProductsSuccess","data","error","getProductsError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAwBC,iBAAxB,QAAiD,SAAjD;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAIA,MAAMC,aAAa,GAAG,YAAU;AAC9B,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUH,cAAV,CAAvB;AACA,SAAOE,QAAP;AAED,CAJD;;AAOA,MAAME,WAAW,GAAG,MAAM;AAExB,SAAO,MAAOC,QAAP,IAA6C;AAClD,QAAI;AAEFA,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEP,iBAAiB,CAACK,WAA1B;AAAuCG,QAAAA,OAAO,EAAE;AAAhD,OAAD,CAAR;AACA,YAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUH,cAAV,CAAvB;AAGAK,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,iBAAiB,CAACS,kBADjB;AAEPD,QAAAA,OAAO,EAAEL,QAAQ,CAACO;AAFX,OAAD,CAAR;AAKD,KAXD,CAWE,OAAOC,KAAP,EAAc;AACdL,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEP,iBAAiB,CAACY,gBAA1B;AAA4CJ,QAAAA,OAAO,EAAE;AAArD,OAAD,CAAR;AACD;AAEF,GAhBD;AAiBD,CAnBD;;AAoBA,SACEH,WADF","sourcesContent":["import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport { ProductAction, ProductActionType } from './types';\nimport { getProductsUrl } from '../config/config.json'\nimport { useQuery } from 'react-query';\n\n\nconst fetchProducts = async ()=>{\n  const response = await axios.get(getProductsUrl);\n  return response\n\n}\n\n\nconst getProducts = () => {\n  \n  return async (dispatch: Dispatch<ProductAction>) => {\n    try {\n\n      dispatch({ type: ProductActionType.getProducts, payload: [] })\n      const response = await axios.get(getProductsUrl);\n    \n\n      dispatch({\n        type: ProductActionType.getProductsSuccess,\n        payload: response.data\n      })\n\n    } catch (error) {\n      dispatch({ type: ProductActionType.getProductsError, payload: 'Error' })\n    }\n\n  }\n}\nexport {\n  getProducts\n}"]},"metadata":{},"sourceType":"module"}