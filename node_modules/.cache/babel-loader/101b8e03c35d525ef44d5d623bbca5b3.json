{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/store-list/store-list.tsx\";\nimport { Row } from 'antd';\nimport StoreListItem from '../store-list-item';\nimport Spinner from '../spinner/spinner';\nimport ErrorIndicator from '../error-indicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StoreList = props => {\n  const {\n    isLoading,\n    isError,\n    error,\n    data: products\n  } = props.product;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(ErrorIndicator, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"site-card-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [26, 26],\n      children: products && products.map(product => {\n        return /*#__PURE__*/_jsxDEV(StoreListItem, {\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StoreList;\nexport default StoreList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreList\");","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/store-list/store-list.tsx"],"names":["Row","StoreListItem","Spinner","ErrorIndicator","StoreList","props","isLoading","isError","error","data","products","product","map","id"],"mappings":";AAAA,SAASA,GAAT,QAAoB,MAApB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAOC,cAAP,MAA2B,oBAA3B;;;AAUA,MAAMC,SAAuC,GAAIC,KAAD,IAAW;AAEzD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA,IAAI,EAAEC;AAAlC,MAA+CL,KAAK,CAACM,OAA3D;;AAEA,MAAIL,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIC,OAAJ,EAAa;AACX,wBAAO,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA,gBAEIE,QAAQ,IAAIA,QAAQ,CAACE,GAAT,CAAcD,OAAD,IAAsB;AAC7C,4BACE,QAAC,aAAD;AAAgC,UAAA,OAAO,EAAEA;AAAzC,WAAoBA,OAAO,CAACE,EAA5B;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJW;AAFhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAxBD;;KAAMT,S;AA0BN,eAAeA,SAAf","sourcesContent":["import { Row } from 'antd';\nimport StoreListItem from '../store-list-item'\nimport Spinner from '../spinner/spinner';\nimport { Product } from '../../interfaces';\nimport ErrorIndicator from '../error-indicator';\nimport { useContext } from 'react';\n\ninterface StoreListInterface{\n  isLoading:boolean,\n  isError:boolean,\n  error\n  data:Product[]\n}\n\nconst StoreList: React.FC<StoreListInterface> = (props) => {\n\n  const { isLoading, isError,error, data: products } = props.product;\n\n  if (isLoading) {\n    return <Spinner />\n  }\n  if (isError) {\n    return <ErrorIndicator error={error}/>\n  }\n\n  return (\n    <div className=\"site-card-wrapper\">\n      <Row gutter={[26, 26]}>\n        {\n          products && products.map((product: Product) => {\n            return (\n              <StoreListItem key={product.id} product={product} />\n            )\n          })\n        }\n      </Row>\n    </div>\n  )\n}\n\nexport default StoreList\n"]},"metadata":{},"sourceType":"module"}