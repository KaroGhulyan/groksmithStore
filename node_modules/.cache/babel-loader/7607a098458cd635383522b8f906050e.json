{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/routes/private-route.tsx\";\nimport { Redirect, Route } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  // Add your own authentication on the below line.\n  const isLoggedIn = AuthService.isLoggedIn();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/routes/private-route.tsx"],"names":["Redirect","Route","PrivateRoute","component","Component","rest","isLoggedIn","AuthService","props","pathname","state","from","location"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAE1D;AACA,QAAMC,UAAU,GAAGC,WAAW,CAACD,UAAZ,EAAnB;AAEA,sBACE,QAAC,KAAD,OACMD,IADN;AAEE,IAAA,MAAM,EAAEG,KAAK,IACXF,UAAU,gBACR,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjBD;;KAAMV,Y;AAmBN,eAAeA,YAAf","sourcesContent":["import { Redirect, Route } from \"react-router\"\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n  // Add your own authentication on the below line.\n  const isLoggedIn = AuthService.isLoggedIn()\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}