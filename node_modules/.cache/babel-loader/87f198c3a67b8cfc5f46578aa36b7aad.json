{"ast":null,"code":"import axios from 'axios';\nimport { signUpUrl, signInUrl } from '../config/config.json';\nimport { UserActionType } from './types';\n\nconst signIn = data => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(signInUrl, data);\n      const token = response.data.token; // console.log(response.data);\n\n      dispatch({\n        type: UserActionType.isLoggedIn,\n        payload: token\n      });\n    } catch (error) {\n      dispatch({\n        type: UserActionType.getUserError,\n        payload: 'Error'\n      });\n    }\n  };\n};\n\nconst signUp = async data => {\n  try {\n    const response = await axios.post(signUpUrl, data);\n    console.log(response.data);\n  } catch (error) {}\n};\n\nexport { signIn, signUp };","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/actions/user.ts"],"names":["axios","signUpUrl","signInUrl","UserActionType","signIn","data","dispatch","response","post","token","type","isLoggedIn","payload","error","getUserError","signUp","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAoC,uBAApC;AAEA,SAAqBC,cAArB,QAA2C,SAA3C;;AAKA,MAAMC,MAAM,GAAIC,IAAD,IAAkB;AAC/B,SAAO,MAAOC,QAAP,IAA0C;AAC/C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAkBN,SAAlB,EAA4BG,IAA5B,CAAvB;AACA,YAAMI,KAAK,GAAGF,QAAQ,CAACF,IAAT,CAAcI,KAA5B,CAFE,CAGF;;AAEAH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEP,cAAc,CAACQ,UADd;AAEPC,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAKD,KAVD,CAUE,OAAOI,KAAP,EAAc;AACdP,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEP,cAAc,CAACW,YAAvB;AAAqCF,QAAAA,OAAO,EAAE;AAA9C,OAAD,CAAR;AACD;AAEF,GAfD;AAgBD,CAjBD;;AAoBA,MAAMG,MAAM,GAAG,MAAOV,IAAP,IAAqB;AAClC,MAAI;AAEF,UAAME,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAWP,SAAX,EAAsBI,IAAtB,CAAvB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACF,IAArB;AAGD,GAND,CAME,OAAOQ,KAAP,EAAc,CACf;AAEF,CAVD;;AAWA,SACET,MADF,EAEEW,MAFF","sourcesContent":["import axios from 'axios';\nimport { Dispatch } from 'react';\nimport { signUpUrl, signInUrl} from '../config/config.json'\nimport { SignIn } from '../interfaces';\nimport { UserAction, UserActionType } from './types';\n\ninterface Token {\n  token:string\n}\nconst signIn = (data: SignIn) => {\n  return async (dispatch: Dispatch<UserAction>) => {\n    try {\n      const response = await axios.post<Token>(signInUrl,data);\n      const token = response.data.token\n      // console.log(response.data);\n      \n      dispatch({\n        type: UserActionType.isLoggedIn,\n        payload: token\n      })\n\n    } catch (error) {\n      dispatch({ type: UserActionType.getUserError, payload: 'Error' })\n    }\n\n  }\n}\n\n\nconst signUp = async (data: any) => {\n  try {\n\n    const response = await axios.post(signUpUrl, data);\n    console.log(response.data);\n\n\n  } catch (error) {\n  }\n\n}\nexport {\n  signIn,\n  signUp\n}"]},"metadata":{},"sourceType":"module"}