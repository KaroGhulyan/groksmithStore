{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/hoc/with-auth-service.js\";\nimport { Redirect, useHistory } from 'react-router'; // const withAuthService = (WrappedComponent) => {\n//   return (props) => {\n//     const history = useHistory();\n//     if (typeof window !== 'undefined') {\n//       const token = localStorage.getItem('token');\n//       if (!token) {\n//         history.push('/login');\n//         return null;\n//       }\n//     }\n//     return <WrappedComponent {...props} />;\n//   };\n// };\n// export default withAuthService;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst withAuthService = WrappedComponent => {\n  var _s = $RefreshSig$();\n\n  const AuthServiceComponent = ({ ...props\n  }) => {\n    _s();\n\n    const history = useHistory();\n\n    if (typeof window !== 'undefined') {\n      const token = localStorage.getItem('token');\n\n      if (!token) {\n        // history.push('/login');\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this); // return null;\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this); // const storeService = new StoreService();\n    // const products = useProducts();\n    // return (\n    //   <StoreContext.Provider value={{ products, storeService }}>\n    //     <Component {...props} />;\n    //   </StoreContext.Provider>\n    // );\n  };\n\n  _s(AuthServiceComponent, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n    return [useHistory];\n  });\n\n  return AuthServiceComponent;\n};\n\nexport default withAuthService;","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/hoc/with-auth-service.js"],"names":["Redirect","useHistory","withAuthService","WrappedComponent","AuthServiceComponent","props","history","window","token","localStorage","getItem"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,cAArC,C,CAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,eAAe,GAAIC,gBAAD,IAAsB;AAAA;;AAE5C,QAAMC,oBAAoB,GAAG,CAAC,EAAE,GAAGC;AAAL,GAAD,KAAkB;AAAA;;AAC7C,UAAMC,OAAO,GAAGL,UAAU,EAA1B;;AAEA,QAAI,OAAOM,MAAP,KAAkB,WAAtB,EAAmC;AACjC,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,UAAI,CAACF,KAAL,EAAY;AACV;AACA,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP,CAFU,CAGV;AACD;AACF;;AACD,wBAAO,QAAC,gBAAD,OAAsBH;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAP,CAZ6C,CAc7C;AACA;AAEA;AACA;AACA;AACA;AACA;AACD,GAtBD;;AAF4C,KAEtCD,oBAFsC;AAAA,YAG1BH,UAH0B;AAAA;;AA0B5C,SAAOG,oBAAP;AACD,CA3BD;;AA6BA,eAAeF,eAAf","sourcesContent":["import { Redirect, useHistory } from 'react-router';\n\n// const withAuthService = (WrappedComponent) => {\n\n//   return (props) => {\n//     const history = useHistory();\n\n//     if (typeof window !== 'undefined') {\n\n//       const token = localStorage.getItem('token');\n\n//       if (!token) {\n//         history.push('/login');\n//         return null;\n//       }\n//     }\n//     return <WrappedComponent {...props} />;\n//   };\n// };\n\n// export default withAuthService;\n\nconst withAuthService = (WrappedComponent) => {\n  \n  const AuthServiceComponent = ({ ...props }) => {\n    const history = useHistory();\n\n    if (typeof window !== 'undefined') {\n      const token = localStorage.getItem('token');\n\n      if (!token) {\n        // history.push('/login');\n        return <Redirect to='/login'/>\n        // return null;\n      }\n    }\n    return <WrappedComponent {...props} />;\n\n    // const storeService = new StoreService();\n    // const products = useProducts();\n\n    // return (\n    //   <StoreContext.Provider value={{ products, storeService }}>\n    //     <Component {...props} />;\n    //   </StoreContext.Provider>\n    // );\n  };\n\n  return AuthServiceComponent;\n};\n\nexport default withAuthService;\n"]},"metadata":{},"sourceType":"module"}