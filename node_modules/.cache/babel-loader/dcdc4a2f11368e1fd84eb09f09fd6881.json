{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/routes/private-route.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  isLoggedIn: qq,\n  ...props\n}) => {\n  _s();\n\n  const {\n    token\n  } = useTypeSelector(state => state.user);\n  const [isLoggedIn, setIsLoggedIn] = useState('');\n  console.log(token);\n  useEffect(() => {\n    setIsLoggedIn(token);\n  }, [token]);\n  console.log(isLoggedIn);\n  return isLoggedIn ? /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PrivateRoute, \"GltDNH+nU34XyKAIc2qmKz04tkg=\", false, function () {\n  return [useTypeSelector];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/routes/private-route.tsx"],"names":["useEffect","useState","Redirect","Route","useTypeSelector","PrivateRoute","isLoggedIn","qq","props","token","state","user","setIsLoggedIn","console","log"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,SAASC,eAAT,QAAgC,0BAAhC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,UAAU,EAACC,EAAb;AAAiB,KAAGC;AAApB,CAAD,KAA2C;AAAA;;AAC9D,QAAM;AAAEC,IAAAA;AAAF,MAAYL,eAAe,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjC;AACA,QAAM,CAACL,UAAD,EAAaM,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa,CAACH,KAAD,CAAb;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAGAI,EAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AAEA,SAAOA,UAAU,gBACb,QAAC,KAAD,OAAWE;AAAX;AAAA;AAAA;AAAA;AAAA,UADa,gBAEb,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAFJ;AAGD,CAdD;;GAAMH,Y;UACcD,e;;;KADdC,Y;AAgBN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Redirect, Route } from \"react-router\"\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\n\nconst PrivateRoute = ({ isLoggedIn:qq, ...props }: any): any => {\n  const { token } = useTypeSelector(state => state.user);\n  const [isLoggedIn, setIsLoggedIn] = useState('')\n  console.log(token);\n\n\n  useEffect(() => {\n    setIsLoggedIn(token)\n  }, [token])\n  console.log(isLoggedIn);\n  \n  return isLoggedIn\n    ? <Route {...props} />\n    : <Redirect to=\"/login\" />\n}\n\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}