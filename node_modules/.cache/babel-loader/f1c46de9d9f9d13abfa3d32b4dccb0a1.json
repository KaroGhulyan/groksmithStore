{"ast":null,"code":"import axios from 'axios';\nimport { signUpUrl, signInUrl } from '../config/config.json';\nimport { UserActionType } from './types';\n\nconst signIn = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(signInUrl);\n      dispatch({\n        type: UserActionType.isLoggedIn,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: UserActionType.getUserError,\n        payload: 'Error'\n      });\n    }\n  };\n};\n\nconst signUp = async data => {\n  try {\n    const response = await axios.post(signUpUrl, data);\n    console.log(response.data);\n  } catch (error) {}\n};\n\nexport { signIn, signUp };","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/actions/user.ts"],"names":["axios","signUpUrl","signInUrl","UserActionType","signIn","dispatch","response","get","type","isLoggedIn","payload","data","error","getUserError","signUp","post","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAoC,uBAApC;AACA,SAAqBC,cAArB,QAA2C,SAA3C;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,SAAO,MAAOC,QAAP,IAA0C;AAC/C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUL,SAAV,CAAvB;AACAG,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEL,cAAc,CAACM,UADd;AAEPC,QAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAFX,OAAD,CAAR;AAKD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACdP,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEL,cAAc,CAACU,YAAvB;AAAqCH,QAAAA,OAAO,EAAE;AAA9C,OAAD,CAAR;AACD;AAEF,GAZD;AAaD,CAdD;;AAiBA,MAAMI,MAAM,GAAG,MAAOH,IAAP,IAAqB;AAClC,MAAI;AAEF,UAAML,QAAQ,GAAG,MAAMN,KAAK,CAACe,IAAN,CAAWd,SAAX,EAAsBU,IAAtB,CAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACK,IAArB;AAGD,GAND,CAME,OAAOC,KAAP,EAAc,CACf;AAEF,CAVD;;AAWA,SACER,MADF,EAEEU,MAFF","sourcesContent":["import axios from 'axios';\nimport { Dispatch } from 'react';\nimport { signUpUrl, signInUrl} from '../config/config.json'\nimport { UserAction, UserActionType } from './types';\n\nconst signIn = () => {\n  return async (dispatch: Dispatch<UserAction>) => {\n    try {\n      const response = await axios.get(signInUrl);\n      dispatch({\n        type: UserActionType.isLoggedIn,\n        payload: response.data\n      })\n\n    } catch (error) {\n      dispatch({ type: UserActionType.getUserError, payload: 'Error' })\n    }\n\n  }\n}\n\n\nconst signUp = async (data: any) => {\n  try {\n\n    const response = await axios.post(signUpUrl, data);\n    console.log(response.data);\n\n\n  } catch (error) {\n  }\n\n}\nexport {\n  signIn,\n  signUp\n}"]},"metadata":{},"sourceType":"module"}