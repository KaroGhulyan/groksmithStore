{"ast":null,"code":"import { ProductActionType } from '../actions/types';\nconst initialState = {\n  products: [],\n  loading: true,\n  error: null\n};\n\nconst productsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ProductActionType.getProducts:\n      return {\n        products: [],\n        loading: true,\n        error: null\n      };\n\n    case ProductActionType.getProductsSuccess:\n      return {\n        products: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case ProductActionType.getProductsError:\n      return {\n        products: [],\n        loading: false,\n        error: action.payload\n      };\n  }\n\n  return state;\n}; // export const selectProducts = (initialState: any) => initialState.products;\n\n\nexport default productsReducer;","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/reducers/products.ts"],"names":["ProductActionType","initialState","products","loading","error","productsReducer","state","action","type","getProducts","getProductsSuccess","payload","getProductsError"],"mappings":"AACA,SAAwBA,iBAAxB,QAAiD,kBAAjD;AAEA,MAAMC,YAA0B,GAAG;AACjCC,EAAAA,QAAQ,EAAE,EADuB;AAEjCC,EAAAA,OAAO,EAAE,IAFwB;AAGjCC,EAAAA,KAAK,EAAC;AAH2B,CAAnC;;AAMA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAA+D;AACrF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,iBAAiB,CAACS,WAAvB;AACE,aAAO;AACLP,QAAAA,QAAQ,EAAE,EADL;AAELC,QAAAA,OAAO,EAAE,IAFJ;AAGLC,QAAAA,KAAK,EAAC;AAHD,OAAP;;AAKF,SAAKJ,iBAAiB,CAACU,kBAAvB;AACE,aAAO;AACLR,QAAAA,QAAQ,EAAEK,MAAM,CAACI,OADZ;AAELR,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKJ,iBAAiB,CAACY,gBAAvB;AACE,aAAO;AACLV,QAAAA,QAAQ,EAAE,EADL;AAELC,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAHT,OAAP;AAdJ;;AAoBA,SAAOL,KAAP;AACD,CAtBD,C,CAwBA;;;AAEA,eAAeD,eAAf","sourcesContent":["import { ProductState } from './../interfaces';\nimport { ProductAction, ProductActionType } from '../actions/types';\n\nconst initialState: ProductState = {\n  products: [],\n  loading: true,\n  error:null,\n}\n\nconst productsReducer = (state = initialState, action: ProductAction): ProductState => {\n  switch (action.type) {\n    case ProductActionType.getProducts:\n      return {\n        products: [],\n        loading: true,\n        error:null\n      }\n    case ProductActionType.getProductsSuccess:\n      return {\n        products: action.payload,\n        loading: false,\n        error: null\n      }\n    case ProductActionType.getProductsError:\n      return {\n        products: [],\n        loading: false,\n        error: action.payload\n      }\n  }\n  return state;\n}\n\n// export const selectProducts = (initialState: any) => initialState.products;\n\nexport default productsReducer"]},"metadata":{},"sourceType":"module"}