{"ast":null,"code":"import axios from 'axios';\nimport { getProductsUrl } from '../config/config.json';\n\nconst getProducts = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ProductActionType.getProducts,\n        payload: []\n      });\n      const response = await axios.get(getProductsUrl);\n      dispatch({\n        type: ProductActionType.getProductsSuccess,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: ProductActionType.getProductsError,\n        payload: 'Error'\n      });\n    }\n  };\n};\n\nexport { getProducts };","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/actions/products.ts"],"names":["axios","getProductsUrl","getProducts","dispatch","type","ProductActionType","payload","response","get","getProductsSuccess","data","error","getProductsError"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,cAAT,QAA+B,uBAA/B;;AAOA,MAAMC,WAAW,GAAG,MAAM;AACxB,SAAO,MAAOC,QAAP,IAAsC;AAC3C,QAAI;AAEFA,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEC,iBAAiB,CAACH,WAA1B;AAAuCI,QAAAA,OAAO,EAAE;AAAhD,OAAD,CAAR;AACA,YAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUP,cAAV,CAAvB;AAEAE,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEC,iBAAiB,CAACI,kBADjB;AAEPH,QAAAA,OAAO,EAAEC,QAAQ,CAACG;AAFX,OAAD,CAAR;AAKD,KAVD,CAUE,OAAOC,KAAP,EAAc;AACdR,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEC,iBAAiB,CAACO,gBAA1B;AAA4CN,QAAAA,OAAO,EAAE;AAArD,OAAD,CAAR;AACD;AAEF,GAfD;AAgBD,CAjBD;;AAkBA,SACEJ,WADF","sourcesContent":["import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport { ProductAction, ProductProductActionType } from './types';\nimport { getProductsUrl } from '../config/config.json'\nimport { Product } from '../interfaces';\n\n\n\n\n\nconst getProducts = () => {\n  return async (dispatch: Dispatch<Action>) => {\n    try {\n\n      dispatch({ type: ProductActionType.getProducts, payload: [] })\n      const response = await axios.get(getProductsUrl);\n\n      dispatch({\n        type: ProductActionType.getProductsSuccess,\n        payload: response.data\n      })\n\n    } catch (error) {\n      dispatch({ type: ProductActionType.getProductsError, payload: 'Error' })\n    }\n\n  }\n}\nexport {\n  getProducts\n}"]},"metadata":{},"sourceType":"module"}