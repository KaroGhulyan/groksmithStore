{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/pages/product/product.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router';\nimport { useProduct } from '../../../hooks/products';\nimport { ContentWrapper } from '../../../style';\nimport Spinner from '../../spinner/spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Product = () => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const {\n    isLoading,\n    isError,\n    error,\n    data\n  } = useProduct(id);\n  console.log(image);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 14\n    }, this);\n  } // if(isError){\n  //   return <span>{error}</span>>\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(ContentWrapper, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Product, \"Z3pkzE9sIA+CIRYdc5d6Mn+y558=\", false, function () {\n  return [useParams, useProduct];\n});\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/pages/product/product.tsx"],"names":["React","useParams","useProduct","ContentWrapper","Spinner","Product","id","isLoading","isError","error","data","console","log","image"],"mappings":";;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,OAAO,GAAC,MAAI;AAAA;;AAChB,MAAI;AAAEC,IAAAA;AAAF,MAAaL,SAAS,EAA1B;AACA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,MAAwCR,UAAU,CAACI,EAAD,CAAxD;AACEK,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;;AACA,MAAGN,SAAH,EAAa;AACX,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GANa,CAOd;AACA;AACA;;;AAEF,sBACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA3BD;;GAAMF,O;UACaJ,S,EAC6BC,U;;;KAF1CG,O;AA6BN,eAAeA,OAAf","sourcesContent":["import { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Card } from 'antd';\nimport Meta from 'antd/lib/card/Meta';\nimport React from 'react'\nimport { useParams } from 'react-router';\nimport { useProduct } from '../../../hooks/products'\nimport { ContentWrapper } from '../../../style'\nimport ErrorIndicator from '../../error-indicator';\nimport Spinner from '../../spinner/spinner';\n\nconst Product=()=>{\n  let { id }:any = useParams();\n  const { isLoading, isError,error, data}:any = useProduct(id);\n    console.log(image);\n    if(isLoading){\n      return <Spinner/>\n    }\n    // if(isError){\n    //   return <span>{error}</span>>\n    // }\n\n  return (\n    <ContentWrapper>\n      {/* <Card hoverable\n        style={{ width: \"calc(100%/4)\" }}\n        cover={<img alt=\"example\" src={image} />}\n        actions={[\n          <SettingOutlined key=\"setting\" />,\n          <EditOutlined key=\"edit\" />,\n          <EllipsisOutlined key=\"ellipsis\" />,\n        ]}\n      >\n        <Meta title={title} description={description} style={{ marginBottom: '30px' }} />\n        <p className='price'>{price}$</p>\n      </Card> */}\n    </ContentWrapper>\n  )\n}\n\nexport default Product\n"]},"metadata":{},"sourceType":"module"}