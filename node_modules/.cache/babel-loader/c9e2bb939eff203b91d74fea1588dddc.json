{"ast":null,"code":"export let ProductActionType;\n\n(function (ProductActionType) {\n  ProductActionType[ProductActionType[\"getProducts\"] = 0] = \"getProducts\";\n  ProductActionType[ProductActionType[\"getProductsSuccess\"] = 1] = \"getProductsSuccess\";\n  ProductActionType[ProductActionType[\"getProductsError\"] = 2] = \"getProductsError\";\n})(ProductActionType || (ProductActionType = {}));\n\nexport let UserActionType;\n\n(function (UserActionType) {\n  UserActionType[UserActionType[\"isLoggedIn\"] = 0] = \"isLoggedIn\";\n  UserActionType[UserActionType[\"user\"] = 1] = \"user\";\n})(UserActionType || (UserActionType = {}));","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/actions/types.ts"],"names":["ProductActionType","UserActionType"],"mappings":"AAEA,WAAYA,iBAAZ;;WAAYA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;GAAAA,iB,KAAAA,iB;;AAKZ,WAAYC,cAAZ;;WAAYA,c;AAAAA,EAAAA,c,CAAAA,c;AAAAA,EAAAA,c,CAAAA,c;GAAAA,c,KAAAA,c","sourcesContent":["import { GetProductsAction, GetProductsSuccessAction, GetProductsErrorAction } from \"../interfaces\";\n\nexport enum ProductActionType {\n  getProducts,\n  getProductsSuccess,\n  getProductsError\n}\nexport enum UserActionType {\n  isLoggedIn,\n  user\n}\n\nexport type ProductAction = GetProductsAction | GetProductsSuccessAction | GetProductsErrorAction\nexport type UserAction = GetProductsAction | GetProductsSuccessAction | GetProductsErrorAction"]},"metadata":{},"sourceType":"module"}