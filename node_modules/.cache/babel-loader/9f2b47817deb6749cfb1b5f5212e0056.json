{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/store-item/store-list.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { StoreContext } from '../store-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StoreList = () => {\n  _s();\n\n  // const { isLoading, error, data: products } = useProducts()\n  const x = useContext(StoreContext);\n  console.log(x); // if (isLoading) {\n  //   return <Spinner />\n  // }\n  // if (error) {\n  //   return <ErrorIndicator />\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"site-card-wrapper\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StoreList, \"untY9C4gP9QwYZtayibWz8iAgQw=\");\n\n_c = StoreList;\nexport default StoreList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreList\");","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/store-item/store-list.tsx"],"names":["useContext","StoreContext","StoreList","x","console","log"],"mappings":";;;AASA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,QAA6B,kBAA7B;;;AAQA,MAAMC,SAAS,GAAG,MAAmB;AAAA;;AAEnC;AACA,QAAMC,CAAC,GAAGH,UAAU,CAACC,YAAD,CAApB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAJmC,CAMnC;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA1BD;;GAAMD,S;;KAAAA,S;AA8BN,eAAeA,SAAf","sourcesContent":["import { Row } from 'antd';\nimport StoreListItem from '../store-list-item'\nimport Spinner from '../spinner/spinner';\nimport { WithStoreService } from '../hoc';\nimport { useQuery } from 'react-query';\nimport { Product } from '../../interfaces';\nimport StoreService from '../../services/store-service';\nimport ErrorIndicator from '../error-indicator';\nimport { useProducts } from '../../hooks/products';\nimport { useContext } from 'react';\nimport { StoreContext } from '../store-context';\n\ninterface StoreListProps {\n  data: Product[],\n  isLoading:any,\n  \n}\n\nconst StoreList = (): JSX.Element => {\n\n  // const { isLoading, error, data: products } = useProducts()\n  const x = useContext(StoreContext);\n  console.log(x);\n  \n  // if (isLoading) {\n  //   return <Spinner />\n  // }\n  // if (error) {\n  //   return <ErrorIndicator />\n  // }\n\n  return (\n    <div className=\"site-card-wrapper\">\n      {/* <Row gutter={[26, 26]}>\n        {\n         products && products.map((product) => {\n            return (\n              <StoreListItem key={product.id} product={product} />\n            )\n          })\n        }\n      </Row> */}\n    </div>\n  )\n}\n\n\n\nexport default StoreList\n"]},"metadata":{},"sourceType":"module"}