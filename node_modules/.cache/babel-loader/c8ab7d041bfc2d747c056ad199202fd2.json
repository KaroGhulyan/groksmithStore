{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/pages/register/register.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Input, Select, Checkbox, Button } from 'antd';\nimport { ContentWrapper } from '../../../style';\nimport { useActions } from '../../hooks/useAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst RegistrationForm = () => {\n  _s();\n\n  const [form] = Form.useForm();\n  const {\n    userRegister\n  } = useActions();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  const prefixSelector = /*#__PURE__*/_jsxDEV(Form.Item, {\n    name: \"prefix\",\n    noStyle: true,\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 70\n      },\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"86\",\n        children: \"+86\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"87\",\n        children: \"+87\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(ContentWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n      form: form,\n      name: \"register\",\n      onFinish: onFinish,\n      initialValues: {\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\n        prefix: '86'\n      },\n      scrollToFirstError: true,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"email\",\n        label: \"E-mail\",\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"password\",\n        label: \"Password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        hasFeedback: true,\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"confirm\",\n        label: \"Confirm Password\",\n        dependencies: ['password'],\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, ({\n          getFieldValue\n        }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('password') === value) {\n              return Promise.resolve();\n            }\n\n            return Promise.reject(new Error('The two passwords that you entered do not match!'));\n          }\n\n        })],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"first name\",\n        label: \"First name\",\n        tooltip: \"What do you want others to call you?\",\n        rules: [{\n          required: true,\n          message: 'Please input your first name!',\n          whitespace: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"last Name\",\n        label: \"Last Name\",\n        tooltip: \"What do you want others to call you?\",\n        rules: [{\n          required: true,\n          message: 'Please input your last Name!',\n          whitespace: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"city\",\n        label: \"City\",\n        tooltip: \"What do you want others to call you?\",\n        rules: [{\n          required: true,\n          message: 'Please input your city!',\n          whitespace: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"street\",\n        label: \"Street\",\n        tooltip: \"What do you want others to call you?\",\n        rules: [{\n          required: true,\n          message: 'Please input your street!',\n          whitespace: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"zipcode\",\n        label: \"Zipcode\",\n        tooltip: \"What do you want others to call you?\",\n        rules: [{\n          required: true,\n          message: 'Please input your zipcode!',\n          whitespace: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"phone\",\n        label: \"Phone Number\",\n        rules: [{\n          required: true,\n          message: 'Please input your phone number!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          addonBefore: prefixSelector,\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"agreement\",\n        valuePropName: \"checked\",\n        rules: [{\n          validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement'))\n        }],\n        ...tailFormItemLayout,\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: [\"I have read the \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\",\n            children: \"agreement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationForm, \"h6r53oKudGvdDUxm4uYosc5SM/g=\", false, function () {\n  return [Form.useForm, useActions];\n});\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/pages/register/register.tsx"],"names":["React","Form","Input","Select","Checkbox","Button","ContentWrapper","useActions","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegistrationForm","form","useForm","userRegister","onFinish","values","console","log","prefixSelector","width","residence","prefix","type","message","required","getFieldValue","validator","_","value","Promise","resolve","reject","Error","whitespace"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Form,\n  Input,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n} from 'antd';\nimport { ContentWrapper } from '../../../style';\nimport { useActions } from '../../hooks/useAction';\n\nconst { Option } = Select;\n\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nconst RegistrationForm = () => {\n  const [form] = Form.useForm();\n  const { userRegister } = useActions()\n\n  const onFinish = (values: any) => {\n\n    console.log('Received values of form: ', values);\n  };\n\n  const prefixSelector = (\n    <Form.Item name=\"prefix\" noStyle>\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>\n    </Form.Item>\n  );\n\n\n  return (\n    <ContentWrapper>\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"register\"\n        onFinish={onFinish}\n        initialValues={{\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\n          prefix: '86',\n        }}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"email\"\n          label=\"E-mail\"\n          rules={[\n            {\n              type: 'email',\n              message: 'The input is not valid E-mail!',\n            },\n            {\n              required: true,\n              message: 'Please input your E-mail!',\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"password\"\n          label=\"Password\"\n          rules={[\n            {\n              required: true,\n              message: 'Please input your password!',\n            },\n          ]}\n          hasFeedback\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          name=\"confirm\"\n          label=\"Confirm Password\"\n          dependencies={['password']}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: 'Please confirm your password!',\n            },\n            ({ getFieldValue }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(new Error('The two passwords that you entered do not match!'));\n              },\n            }),\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item\n          name=\"first name\"\n          label=\"First name\"\n          tooltip=\"What do you want others to call you?\"\n          rules={[{ required: true, message: 'Please input your first name!', whitespace: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"last Name\"\n          label=\"Last Name\"\n          tooltip=\"What do you want others to call you?\"\n          rules={[{ required: true, message: 'Please input your last Name!', whitespace: true }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"city\"\n          label=\"City\"\n          tooltip=\"What do you want others to call you?\"\n          rules={[{ required: true, message: 'Please input your city!', whitespace: true }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"street\"\n          label=\"Street\"\n          tooltip=\"What do you want others to call you?\"\n          rules={[{ required: true, message: 'Please input your street!', whitespace: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"zipcode\"\n          label=\"Zipcode\"\n          tooltip=\"What do you want others to call you?\"\n          rules={[{ required: true, message: 'Please input your zipcode!', whitespace: true }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"phone\"\n          label=\"Phone Number\"\n          rules={[{ required: true, message: 'Please input your phone number!' }]}\n        >\n          <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\n        </Form.Item>\n        <Form.Item\n          name=\"agreement\"\n          valuePropName=\"checked\"\n          rules={[\n            {\n              validator: (_, value) =>\n                value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\n            },\n          ]}\n          {...tailFormItemLayout}\n        >\n          <Checkbox>\n            I have read the <a href=\"\">agreement</a>\n          </Checkbox>\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n        </Form.Item>\n      </Form>\n    </ContentWrapper>\n  );\n};\n\nexport default RegistrationForm"]},"metadata":{},"sourceType":"module"}