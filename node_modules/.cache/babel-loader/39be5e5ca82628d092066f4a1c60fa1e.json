{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/pages/login/login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { Container, ContentWrapper } from '../../../style';\nimport { Link } from 'react-router-dom';\nimport { StoreContext } from '../../store-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  // interface Token {\n  //   token: string\n  // }\n  const {\n    storeService\n  } = useContext(StoreContext);\n  console.log(storeService);\n\n  const onFinish = async values => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        name: \"basic\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        initialValues: {\n          remember: true\n        },\n        onFinish: onFinish,\n        onFinishFailed: onFinishFailed,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Username\",\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: 'Please input your username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: 'Please input your password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"remember\",\n          valuePropName: \"checked\",\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            offset: 8,\n            span: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"LY77YZhjfP76+y+U3bv7wkNr20k=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/pages/login/login.tsx"],"names":["React","useContext","Form","Input","Button","Container","ContentWrapper","Link","StoreContext","Login","storeService","console","log","onFinish","values","onFinishFailed","errorInfo","span","remember","required","message","offset"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { Form, Input, Button } from 'antd';\nimport { Container, ContentWrapper } from '../../../style';\nimport { Link } from 'react-router-dom';\nimport { SignIn } from '../../../interfaces';\nimport { StoreContext } from '../../store-context';\n\n\nconst Login = () => {\n  // interface Token {\n  //   token: string\n  // }\n  const { storeService } = useContext(StoreContext);\n\n  console.log(storeService);\n\n\n  const onFinish = async (values: SignIn) => {\n    console.log('Success:', values);\n    \n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Container>\n      <ContentWrapper>\n        <h1>Sign in</h1>\n        <Form\n          name=\"basic\"\n          labelCol={{ span: 8 }}\n          wrapperCol={{ span: 16 }}\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[{ required: true, message: 'Please input your username!' }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[{ required: true, message: 'Please input your password!' }]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\n            <Link to='register'>Register</Link>\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </ContentWrapper>\n    </Container>\n  );\n}\n\nexport default Login\n\n\n\n"]},"metadata":{},"sourceType":"module"}