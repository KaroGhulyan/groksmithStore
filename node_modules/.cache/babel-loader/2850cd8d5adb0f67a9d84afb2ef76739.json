{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/routes/private-route.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  // Add your own authentication on the below line.\n  const {\n    token\n  } = useTypeSelector(state => state.user);\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\n  useEffect(() => {\n    setIsLoggedIn(token);\n  }, [token]);\n  console.log(isLoggedIn);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      console.log(isLoggedIn, '');\n      return isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateRoute, \"V+XImQSxz8VSQBvTo2G6l5iNMxc=\", false, function () {\n  return [useTypeSelector];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/routes/private-route.tsx"],"names":["useEffect","useState","Redirect","Route","useTypeSelector","PrivateRoute","component","Component","rest","token","state","user","isLoggedIn","setIsLoggedIn","console","log","props","pathname","from","location"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,SAASC,eAAT,QAAgC,0BAAhC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAA4C;AAAA;;AAE/D;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBL,eAAe,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAArC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,IAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,aAAa,CAACJ,KAAD,CAAb;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEA,sBACE,QAAC,KAAD,OACMJ,IADN;AAEE,IAAA,MAAM,EAAEQ,KAAK,IAAG;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ,EAAuB,EAAvB;AAEA,aAAOA,UAAU,gBACf,QAAC,SAAD,OAAeI;AAAf;AAAA;AAAA;AAAA;AAAA,cADe,gBAGf,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE,QAAZ;AAAsBP,UAAAA,KAAK,EAAE;AAAEQ,YAAAA,IAAI,EAAEF,KAAK,CAACG;AAAd;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA,cAHF;AAKD;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA3BD;;GAAMd,Y;UAGkBD,e;;;KAHlBC,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Redirect, Route } from \"react-router\"\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\n\nconst PrivateRoute = ({ component: Component, ...rest }: any) => {\n\n  // Add your own authentication on the below line.\n  const { token }:any = useTypeSelector(state => state.user);\n  const [isLoggedIn, setIsLoggedIn] = useState(null)\n\n  useEffect(() => {\n    setIsLoggedIn(token)\n  }, [token])\n  \n  console.log(isLoggedIn);\n\n  return (\n    <Route\n      {...rest}\n      render={props =>{\n        console.log(isLoggedIn,'');\n        \n        return isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n      }\n    />\n  )\n}\n\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}