{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/store-item/store-list.tsx\",\n    _s = $RefreshSig$();\n\nimport { Row } from 'antd';\nimport StoreListItem from '../store-list-item';\nimport Spinner from '../spinner/spinner';\nimport { useQuery } from 'react-query';\nimport ErrorIndicator from '../error-indicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StoreList = () => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    data: products\n  } = useQuery('products', storeService.getProducts);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"site-card-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [26, 26],\n      children: products && products.map(product => {\n        return /*#__PURE__*/_jsxDEV(StoreListItem, {\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StoreList, \"iaoD2ZusNTBOIAJs8sMkAJ0qc0M=\", false, function () {\n  return [useQuery];\n});\n\n_c = StoreList;\nexport default StoreList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreList\");","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/store-item/store-list.tsx"],"names":["Row","StoreListItem","Spinner","useQuery","ErrorIndicator","StoreList","isLoading","error","data","products","storeService","getProducts","map","product","id"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,MAApB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AAGA,OAAOC,cAAP,MAA2B,oBAA3B;;;AAOA,MAAMC,SAAS,GAAG,MAAmB;AAAA;;AAInC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,IAAI,EAAEC;AAA1B,MAAuCN,QAAQ,CAAY,UAAZ,EAAwBO,YAAY,CAACC,WAArC,CAArD;;AAGA,MAAIL,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACT,wBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA,gBAEIE,QAAQ,IAAIA,QAAQ,CAACG,GAAT,CAAaC,OAAO,IAAI;AAClC,4BACE,QAAC,aAAD;AAAgC,UAAA,OAAO,EAAEA;AAAzC,WAAoBA,OAAO,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJW;AAFhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA3BD;;GAAMT,S;UAIyCF,Q;;;KAJzCE,S;AA+BN,eAAeA,SAAf","sourcesContent":["import { Row } from 'antd';\nimport StoreListItem from '../store-list-item'\nimport Spinner from '../spinner/spinner';\nimport { WithStoreService } from '../hoc';\nimport { useQuery } from 'react-query';\nimport { Product } from '../../interfaces';\nimport StoreService from '../../services/store-service';\nimport ErrorIndicator from '../error-indicator';\nimport { useProducts } from '../../hooks/products';\n\ninterface StoreListProps {\n  storeService: any\n}\n\nconst StoreList = (): JSX.Element => {\n\n\n\n  const { isLoading, error, data: products } = useQuery<Product[]>('products', storeService.getProducts)\n\n\n  if (isLoading) {\n    return <Spinner />\n  }\n  if (error) {\n    return <ErrorIndicator />\n  }\n\n  return (\n    <div className=\"site-card-wrapper\">\n      <Row gutter={[26, 26]}>\n        {\n          products && products.map(product => {\n            return (\n              <StoreListItem key={product.id} product={product} />\n            )\n          })\n        }\n      </Row>\n    </div>\n  )\n}\n\n\n\nexport default StoreList\n"]},"metadata":{},"sourceType":"module"}