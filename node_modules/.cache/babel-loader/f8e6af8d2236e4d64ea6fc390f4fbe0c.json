{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/hoc/with-store-service.js\";\nimport React from 'react';\nimport StoreService from '../../services/store-service';\nimport { StoreContext } from '../store-context'; // const WithStoreService = () => (Wrapped) => {\n//   const storeService = new StoreService();\n//   return (props) => (\n//     <StoreContext.Provider value={storeService}>\n//       {() => {\n//         return <Wrapped {...props} />;\n//       }}\n//     </StoreContext.Provider>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewHOC = PassedComponent => {\n  return class extends React.Component {\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PassedComponent, { ...this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    }\n\n  };\n}; // export default WithStoreService;\n\n\n_c = NewHOC;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewHOC\");","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/hoc/with-store-service.js"],"names":["React","StoreService","StoreContext","NewHOC","PassedComponent","Component","render","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,YAAT,QAA6B,kBAA7B,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,MAAMC,MAAM,GAAIC,eAAD,IAAqB;AAClC,SAAO,cAAcJ,KAAK,CAACK,SAApB,CAA8B;AACnCC,IAAAA,MAAM,GAAG;AACP,0BACE;AAAA,+BACE,QAAC,eAAD,OAAqB,KAAKC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAPkC,GAArC;AASD,CAVD,C,CAWA;;;KAXMJ,M","sourcesContent":["import React from 'react';\nimport StoreService from '../../services/store-service';\nimport { StoreContext } from '../store-context';\n\n// const WithStoreService = () => (Wrapped) => {\n//   const storeService = new StoreService();\n\n//   return (props) => (\n//     <StoreContext.Provider value={storeService}>\n//       {() => {\n//         return <Wrapped {...props} />;\n//       }}\n//     </StoreContext.Provider>\n//   );\n// };\n\n\nconst NewHOC = (PassedComponent) => {\n  return class extends React.Component {\n    render() {\n      return (\n        <div>\n          <PassedComponent {...this.props} />\n        </div>\n      );\n    }\n  };\n};\n// export default WithStoreService;"]},"metadata":{},"sourceType":"module"}