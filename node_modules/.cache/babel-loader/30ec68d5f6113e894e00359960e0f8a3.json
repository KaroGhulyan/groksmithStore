{"ast":null,"code":"import axios from 'axios';\nimport { signUpUrl } from '../config/config.json';\n\nconst signIn = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(getProductsUrl);\n      dispatch({\n        type: ProductActionType.getProductsSuccess,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: ProductActionType.getProductsError,\n        payload: 'Error'\n      });\n    }\n  };\n};\n\nconst signUp = async data => {\n  try {\n    const response = await axios.post(signUpUrl, data);\n    console.log(response.data);\n  } catch (error) {}\n};\n\nexport { signIn, signUp };","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/actions/user.ts"],"names":["axios","signUpUrl","signIn","dispatch","response","get","getProductsUrl","type","ProductActionType","getProductsSuccess","payload","data","error","getProductsError","signUp","post","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAAoC,uBAApC;;AAGA,MAAMC,MAAM,GAAG,MAAM;AACnB,SAAO,MAAOC,QAAP,IAA0C;AAC/C,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUC,cAAV,CAAvB;AACAH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEC,iBAAiB,CAACC,kBADjB;AAEPC,QAAAA,OAAO,EAAEN,QAAQ,CAACO;AAFX,OAAD,CAAR;AAKD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACdT,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEC,iBAAiB,CAACK,gBAA1B;AAA4CH,QAAAA,OAAO,EAAE;AAArD,OAAD,CAAR;AACD;AAEF,GAZD;AAaD,CAdD;;AAiBA,MAAMI,MAAM,GAAG,MAAOH,IAAP,IAAqB;AAClC,MAAI;AAEF,UAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACe,IAAN,CAAWd,SAAX,EAAsBU,IAAtB,CAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAQ,CAACO,IAArB;AAGD,GAND,CAME,OAAOC,KAAP,EAAc,CACf;AAEF,CAVD;;AAWA,SACEV,MADF,EAEEY,MAFF","sourcesContent":["import axios from 'axios';\nimport { Dispatch } from 'react';\nimport { signUpUrl, signInUrl} from '../config/config.json'\nimport { UserAction } from './types';\n\nconst signIn = () => {\n  return async (dispatch: Dispatch<UserAction>) => {\n    try {\n      const response = await axios.get(getProductsUrl);\n      dispatch({\n        type: ProductActionType.getProductsSuccess,\n        payload: response.data\n      })\n\n    } catch (error) {\n      dispatch({ type: ProductActionType.getProductsError, payload: 'Error' })\n    }\n\n  }\n}\n\n\nconst signUp = async (data: any) => {\n  try {\n\n    const response = await axios.post(signUpUrl, data);\n    console.log(response.data);\n\n\n  } catch (error) {\n  }\n\n}\nexport {\n  signIn,\n  signUp\n}"]},"metadata":{},"sourceType":"module"}