{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/routes/routes.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useTypeSelector } from '../hooks/useTypeSelector';\nimport { HomePage, CartPage, Orders, Login, RegistrationForm } from '../pages';\nimport PrivateRoute from './private-route';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Routes = () => {\n  _s();\n\n  const {\n    token\n  } = useTypeSelector(state => state.user);\n  const [isLoggedIn, setIsLoggedIn] = useState('');\n  console.log(token);\n  useEffect(() => {\n    setIsLoggedIn(token);\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      isLoggedIn: isLoggedIn,\n      path: \"/\",\n      component: HomePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/cart\",\n      component: CartPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/orders\",\n      component: Orders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/register\",\n      component: RegistrationForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Routes, \"MbKy9U//QOCyDFrh6IiEMi0gm5U=\", false, function () {\n  return [useTypeSelector];\n});\n\n_c = Routes;\nexport default Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/routes/routes.tsx"],"names":["React","useEffect","useState","Route","Switch","useTypeSelector","HomePage","CartPage","Orders","Login","RegistrationForm","PrivateRoute","Routes","token","state","user","isLoggedIn","setIsLoggedIn","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAAuC,kBAAvC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,gBAA5C,QAAoE,UAApE;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAWR,eAAe,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAhC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,aAAa,CAACJ,KAAD,CAAb;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEJ;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,UAAU,EAAEO,UAA1B;AAAsC,MAAA,IAAI,EAAC,GAA3C;AAA+C,MAAA,SAAS,EAAEV;AAA1D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAnBD;;GAAME,M;UACaP,e;;;KADbO,M;AAqBN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Route, Switch,Redirect } from 'react-router-dom';\nimport { useTypeSelector } from '../hooks/useTypeSelector';\nimport { HomePage, CartPage, Orders, Login, RegistrationForm } from '../pages';\nimport PrivateRoute from './private-route';\n\nconst Routes = () => {\n  const { token} = useTypeSelector(state => state.user);\n  const [isLoggedIn, setIsLoggedIn] = useState('')\n  console.log(token);\n  \n\n  useEffect(() => {\n    setIsLoggedIn(token)\n  }, [token])\n  \n  return (\n    <Switch>\n      <Route path=\"/login\" component={Login} />\n      <PrivateRoute isLoggedIn={isLoggedIn} path=\"/\" component={HomePage} />\n      <Route path=\"/cart\" component={CartPage} />\n      <Route path=\"/orders\" component={Orders} />\n      <Route path=\"/register\" component={RegistrationForm} />\n    </Switch>\n  )\n}\n\nexport default Routes\n"]},"metadata":{},"sourceType":"module"}