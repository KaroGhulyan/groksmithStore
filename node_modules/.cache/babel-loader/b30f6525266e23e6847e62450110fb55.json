{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/hoc/with-store-service.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useProducts } from '../../hooks/products';\nimport StoreService from '../../services/store-service';\nimport { StoreContext } from '../store-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WithStoreService = Wrapped => {\n  _s();\n\n  const storeService = new StoreService();\n  const {\n    isLoading,\n    error,\n    data: products\n  } = useProducts();\n  return class extends React.Component {\n    render() {\n      return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n        value: storeService,\n        children: /*#__PURE__*/_jsxDEV(Wrapped, { ...this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    }\n\n  };\n};\n\n_s(WithStoreService, \"QdoAn3ujWVdt/C6V5RUTE7ckV14=\", false, function () {\n  return [useProducts];\n});\n\n_c = WithStoreService;\nexport default WithStoreService;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithStoreService\");","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/hoc/with-store-service.js"],"names":["React","useProducts","StoreService","StoreContext","WithStoreService","Wrapped","storeService","isLoading","error","data","products","Component","render","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,YAAT,QAA6B,kBAA7B;;;AAEA,MAAMC,gBAAgB,GAAIC,OAAD,IAAa;AAAA;;AACpC,QAAMC,YAAY,GAAG,IAAIJ,YAAJ,EAArB;AACA,QAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,IAAI,EAAEC;AAA1B,MAAuCT,WAAW,EAAxD;AAEA,SAAO,cAAcD,KAAK,CAACW,SAApB,CAA8B;AACnCC,IAAAA,MAAM,GAAG;AACP,0BACE,QAAC,YAAD,CAAc,QAAd;AAAuB,QAAA,KAAK,EAAEN,YAA9B;AAAA,+BACE,QAAC,OAAD,OAAa,KAAKO;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAPkC,GAArC;AASD,CAbD;;GAAMT,gB;UAEyCH,W;;;KAFzCG,gB;AAcN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport { useProducts } from '../../hooks/products';\nimport StoreService from '../../services/store-service';\nimport { StoreContext } from '../store-context';\n\nconst WithStoreService = (Wrapped) => {\n  const storeService = new StoreService();\n  const { isLoading, error, data: products } = useProducts();\n\n  return class extends React.Component {\n    render() {\n      return (\n        <StoreContext.Provider value={storeService}>\n          <Wrapped {...this.props} />\n        </StoreContext.Provider>\n      );\n    }\n  };\n};\nexport default WithStoreService;\n"]},"metadata":{},"sourceType":"module"}