{"ast":null,"code":"var _jsxFileName = \"/home/karo/Desktop/TS/groksmithStore/src/components/routes/private-route.tsx\",\n    _s = $RefreshSig$();\n\nimport { Redirect, Route } from \"react-router\";\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  // Add your own authentication on the below line.\n  const {\n    token\n  } = useTypeSelector(state => state.user);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateRoute, \"LbvLlLSMOu3o5vqpdkDyVsOZb9M=\", false, function () {\n  return [useTypeSelector];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/components/routes/private-route.tsx"],"names":["Redirect","Route","useTypeSelector","PrivateRoute","component","Component","rest","token","state","user","props","isLoggedIn","pathname","from","location"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,SAASC,eAAT,QAAgC,0BAAhC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAE1D;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYL,eAAe,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjC;AAGA,sBACE,QAAC,KAAD,OACMH,IADN;AAEE,IAAA,MAAM,EAAEI,KAAK,IACXC,UAAU,gBACR,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEE,QAAAA,QAAQ,EAAE,QAAZ;AAAsBJ,QAAAA,KAAK,EAAE;AAAEK,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlBD;;GAAMX,Y;UAGcD,e;;;KAHdC,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import { Redirect, Route } from \"react-router\"\nimport { useTypeSelector } from \"../hooks/useTypeSelector\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n  // Add your own authentication on the below line.\n  const { token } = useTypeSelector(state => state.user);\n\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}