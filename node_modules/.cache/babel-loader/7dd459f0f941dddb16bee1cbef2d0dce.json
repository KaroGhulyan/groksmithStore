{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { ProductActionType } from './types';\nimport { getProductsUrl } from '../config/config.json';\nimport { useQuery } from 'react-query';\n\nconst fetchProducts = () => [];\n\nconst getProducts = () => {\n  _s();\n\n  const {\n    data,\n    status\n  } = useQuery('products');\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ProductActionType.getProducts,\n        payload: []\n      });\n      const response = await axios.get(getProductsUrl);\n      dispatch({\n        type: ProductActionType.getProductsSuccess,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: ProductActionType.getProductsError,\n        payload: 'Error'\n      });\n    }\n  };\n};\n\n_s(getProducts, \"Zxg8aNMC5DxRjb5USqHcIq+KPKs=\", false, function () {\n  return [useQuery];\n});\n\nexport { getProducts };","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/actions/products.ts"],"names":["axios","ProductActionType","getProductsUrl","useQuery","fetchProducts","getProducts","data","status","dispatch","type","payload","response","get","getProductsSuccess","error","getProductsError"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAwBC,iBAAxB,QAAiD,SAAjD;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAGA,MAAMC,aAAa,GAAG,MAAI,EAA1B;;AAKA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAgBJ,QAAQ,CAAC,UAAD,CAA9B;AACA,SAAO,MAAOK,QAAP,IAA6C;AAClD,QAAI;AAEFA,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAER,iBAAiB,CAACI,WAA1B;AAAuCK,QAAAA,OAAO,EAAE;AAAhD,OAAD,CAAR;AACA,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUV,cAAV,CAAvB;AAGAM,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER,iBAAiB,CAACY,kBADjB;AAEPH,QAAAA,OAAO,EAAEC,QAAQ,CAACL;AAFX,OAAD,CAAR;AAKD,KAXD,CAWE,OAAOQ,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAER,iBAAiB,CAACc,gBAA1B;AAA4CL,QAAAA,OAAO,EAAE;AAArD,OAAD,CAAR;AACD;AAEF,GAhBD;AAiBD,CAnBD;;GAAML,W;UACkBF,Q;;;AAmBxB,SACEE,WADF","sourcesContent":["import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport { ProductAction, ProductActionType } from './types';\nimport { getProductsUrl } from '../config/config.json'\nimport { useQuery } from 'react-query';\n\n\nconst fetchProducts = ()=>[\n  \n]\n\n\nconst getProducts = () => {\n  const {data,status} = useQuery('products',)\n  return async (dispatch: Dispatch<ProductAction>) => {\n    try {\n\n      dispatch({ type: ProductActionType.getProducts, payload: [] })\n      const response = await axios.get(getProductsUrl);\n    \n\n      dispatch({\n        type: ProductActionType.getProductsSuccess,\n        payload: response.data\n      })\n\n    } catch (error) {\n      dispatch({ type: ProductActionType.getProductsError, payload: 'Error' })\n    }\n\n  }\n}\nexport {\n  getProducts\n}"]},"metadata":{},"sourceType":"module"}