{"ast":null,"code":"import axios from 'axios';\nimport { getProductsUrl, signInUrl } from '../config/config.json';\nexport default class StoreService {\n  constructor() {\n    this.getProducts = async () => {\n      const response = await axios.get(getProductsUrl);\n      return response === null || response === void 0 ? void 0 : response.data;\n    };\n\n    this.signIn = async data => {\n      try {\n        const response = await axios.post(signInUrl, data);\n        const token = response.data.token;\n        console.log(token);\n        localStorage.setItem('token', token);\n      } catch (error) {\n        throw new Er();\n      } // const response = await axios.post<Token>(signInUrl, data);\n      // return response.data\n\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/karo/Desktop/TS/groksmithStore/src/services/store-service.ts"],"names":["axios","getProductsUrl","signInUrl","StoreService","getProducts","response","get","data","signIn","post","token","console","log","localStorage","setItem","error","Er"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,uBAA1C;AAIA,eAAe,MAAMC,YAAN,CAAmB;AAAA;AAAA,SAEhCC,WAFgC,GAElB,YAAY;AACxB,YAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAqBL,cAArB,CAAvB;AACA,aAAOI,QAAP,aAAOA,QAAP,uBAAOA,QAAQ,CAAEE,IAAjB;AACD,KAL+B;;AAAA,SAMhCC,MANgC,GAMvB,MAAOD,IAAP,IAAqB;AAC5B,UAAI;AACF,cAAMF,QAAQ,GAAG,MAAML,KAAK,CAACS,IAAN,CAAkBP,SAAlB,EAA6BK,IAA7B,CAAvB;AACA,cAAMG,KAAK,GAAGL,QAAQ,CAACE,IAAT,CAAcG,KAA5B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAG,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,KAA9B;AACD,OALD,CAKE,OAAOK,KAAP,EAAc;AACd,cAAM,IAAIC,EAAJ,EAAN;AACD,OAR2B,CAS5B;AACA;;AACD,KAjB+B;AAAA;;AAAA","sourcesContent":["import axios from 'axios';\nimport { getProductsUrl, signInUrl } from '../config/config.json';\nimport { Product, Token, SignIn } from '../interfaces';\n\n\nexport default class StoreService {\n\n  getProducts = async () => {\n    const response = await axios.get<Product[]>(getProductsUrl);\n    return response?.data;\n  };\n  signIn = async (data: any) => {\n    try {\n      const response = await axios.post<Token>(signInUrl, data);\n      const token = response.data.token\n      console.log(token);\n      localStorage.setItem('token', token)\n    } catch (error) {\n      throw new Er\n    }\n    // const response = await axios.post<Token>(signInUrl, data);\n    // return response.data\n  }\n}"]},"metadata":{},"sourceType":"module"}